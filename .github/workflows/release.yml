name: Release Extension

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v2.1.0)'
        required: true
        default: 'v2.1.0'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Build extension
      run: node create-release.js
      
    - name: Create extension package
      run: |
        cd dist
        zip -r ../palestinian-domain-blocker-extension.zip .
        cd ..
        
    - name: Get version info
      id: version
      run: |
        if [ "${{ github.event_name }}" == "push" ] && [ "${{ startsWith(github.ref, 'refs/tags/') }}" == "true" ]; then
          # Triggered by tag push - use the tag
          TAG_NAME=${GITHUB_REF#refs/tags/}
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
          echo "Using tag from push: $TAG_NAME"
        elif [ -n "${{ github.event.inputs.version }}" ]; then
          # Manually triggered - use input version
          echo "tag_name=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          echo "Using manual input: ${{ github.event.inputs.version }}"
        else
          # Fallback to manifest version
          VERSION=$(node -p "require('./manifest.json').version")
          echo "tag_name=v$VERSION" >> $GITHUB_OUTPUT
          echo "Using manifest version: v$VERSION"
        fi
        
    - name: Create Release  
      id: create_release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
      with:
        tag_name: ${{ steps.version.outputs.tag_name }}
        name: Palestinian Domain Blocker ${{ steps.version.outputs.tag_name }}
        files: |
          palestinian-domain-blocker-extension.zip
          INSTALL.md
        body: |
          ## Palestinian Domain Blocker Extension Release
          
          ### üöÄ What's New in This Version
          - **Verified Military Contractors Only**: Focused list of companies with documented Israeli military ties
          - **Removed Inaccurate Entries**: Eliminated 240+ companies without verified military connections
          - **Enhanced Accuracy**: Each blocked domain includes specific evidence and sources
          - **Professional Standards**: Removed inappropriate content, focused on defensible claims
          
          ### üì¶ Installation Instructions
          
          1. Download the `palestinian-domain-blocker-extension.zip` file below
          2. Extract the zip file to a folder on your computer
          3. Open Chrome/Edge/Brave and go to Extensions page (`chrome://extensions/`)
          4. Enable "Developer mode" (toggle in top-right corner)
          5. Click "Load unpacked" and select the extracted folder
          6. Pin the extension to your toolbar - you're ready to go!
          
          Built with ‚ù§Ô∏è for Palestinian solidarity and factual accuracy
        draft: false
        prerelease: false